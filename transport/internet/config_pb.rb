# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: transport/internet/config.proto

require 'google/protobuf'

require_relative Dir.pwd + '/' + 'common/serial/typed_message_pb'

Google::Protobuf::DescriptorPool.generated_pool.build do
  add_file("transport/internet/config.proto", :syntax => :proto3) do
    add_message "xray.transport.internet.TransportConfig" do
      optional :protocol, :enum, 1, "xray.transport.internet.TransportProtocol"
      optional :protocol_name, :string, 3
      optional :settings, :message, 2, "xray.common.serial.TypedMessage"
    end
    add_message "xray.transport.internet.StreamConfig" do
      optional :protocol, :enum, 1, "xray.transport.internet.TransportProtocol"
      optional :protocol_name, :string, 5
      repeated :transport_settings, :message, 2, "xray.transport.internet.TransportConfig"
      optional :security_type, :string, 3
      repeated :security_settings, :message, 4, "xray.common.serial.TypedMessage"
      optional :socket_settings, :message, 6, "xray.transport.internet.SocketConfig"
    end
    add_message "xray.transport.internet.ProxyConfig" do
      optional :tag, :string, 1
      optional :transportLayerProxy, :bool, 2
    end
    add_message "xray.transport.internet.SocketConfig" do
      optional :mark, :int32, 1
      optional :tfo, :int32, 2
      optional :tproxy, :enum, 3, "xray.transport.internet.SocketConfig.TProxyMode"
      optional :receive_original_dest_address, :bool, 4
      optional :bind_address, :bytes, 5
      optional :bind_port, :uint32, 6
      optional :accept_proxy_protocol, :bool, 7
      optional :domain_strategy, :enum, 8, "xray.transport.internet.DomainStrategy"
      optional :dialer_proxy, :string, 9
      optional :tcp_keep_alive_interval, :int32, 10
      optional :tcp_keep_alive_idle, :int32, 11
      optional :tcp_congestion, :string, 12
      optional :interface, :string, 13
      optional :v6only, :bool, 14
      optional :tcp_window_clamp, :int32, 15
      optional :tcp_user_timeout, :int32, 16
      optional :tcp_max_seg, :int32, 17
    end
    add_enum "xray.transport.internet.SocketConfig.TProxyMode" do
      value :Off, 0
      value :TProxy, 1
      value :Redirect, 2
    end
    add_enum "xray.transport.internet.TransportProtocol" do
      value :TCP, 0
      value :UDP, 1
      value :MKCP, 2
      value :WebSocket, 3
      value :HTTP, 4
      value :DomainSocket, 5
    end
    add_enum "xray.transport.internet.DomainStrategy" do
      value :AS_IS, 0
      value :USE_IP, 1
      value :USE_IP4, 2
      value :USE_IP6, 3
    end
  end
end

module Xray
  module Transport
    module Internet
      TransportConfig = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("xray.transport.internet.TransportConfig").msgclass
      StreamConfig = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("xray.transport.internet.StreamConfig").msgclass
      ProxyConfig = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("xray.transport.internet.ProxyConfig").msgclass
      SocketConfig = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("xray.transport.internet.SocketConfig").msgclass
      SocketConfig::TProxyMode = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("xray.transport.internet.SocketConfig.TProxyMode").enummodule
      TransportProtocol = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("xray.transport.internet.TransportProtocol").enummodule
      DomainStrategy = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("xray.transport.internet.DomainStrategy").enummodule
    end
  end
end
