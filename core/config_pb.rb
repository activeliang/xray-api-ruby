# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: core/config.proto

require 'google/protobuf'

require_relative Dir.pwd + '/' + 'common/serial/typed_message_pb'
require_relative Dir.pwd + '/' + 'transport/global/config_pb'

Google::Protobuf::DescriptorPool.generated_pool.build do
  add_file("core/config.proto", :syntax => :proto3) do
    add_message "xray.core.Config" do
      repeated :inbound, :message, 1, "xray.core.InboundHandlerConfig"
      repeated :outbound, :message, 2, "xray.core.OutboundHandlerConfig"
      repeated :app, :message, 4, "xray.common.serial.TypedMessage"
      optional :transport, :message, 5, "xray.transport.Config"
      repeated :extension, :message, 6, "xray.common.serial.TypedMessage"
    end
    add_message "xray.core.InboundHandlerConfig" do
      optional :tag, :string, 1
      optional :receiver_settings, :message, 2, "xray.common.serial.TypedMessage"
      optional :proxy_settings, :message, 3, "xray.common.serial.TypedMessage"
    end
    add_message "xray.core.OutboundHandlerConfig" do
      optional :tag, :string, 1
      optional :sender_settings, :message, 2, "xray.common.serial.TypedMessage"
      optional :proxy_settings, :message, 3, "xray.common.serial.TypedMessage"
      optional :expire, :int64, 4
      optional :comment, :string, 5
    end
  end
end

module Xray
  module Core
    Config = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("xray.core.Config").msgclass
    InboundHandlerConfig = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("xray.core.InboundHandlerConfig").msgclass
    OutboundHandlerConfig = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("xray.core.OutboundHandlerConfig").msgclass
  end
end
